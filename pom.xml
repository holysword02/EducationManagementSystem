<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.ems</groupId>
    <artifactId>EducationManagementSystem</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>EducationManagementSystem</name>
    <description>EducationManagementSystem</description>
    <modules>
        <module>ems-system-service</module>
        <module>ems-teacher-service</module>
        <module>ems-student-service</module>
        <module>ems-questionnaire-service</module>
        <module>ems-statistics-service</module>
        <module>gateway</module>
        <module>ems-framework</module>
        <module>ems-basic-service</module>
        <module>ems-subject-service</module>
    </modules>
    <properties>
        <java.version>17</java.version>
        <spring-boot.version>3.1.5</spring-boot.version>
        <alibaba-cloud.version>2022.0.0.0</alibaba-cloud.version>
        <springcloud.version>2022.0.4</springcloud.version>
        <mysql.version>8.0.33</mysql.version>
        <docker.image.prefix>ems</docker.image.prefix>
    </properties>

    <dependencies>
        <!-- 健康管理依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${springcloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <!-- docker -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>

                <!--   configuration替代编写的Dockerfile文件             -->
                <configuration>
                    <!--                 指定基础镜像-->
                    <baseImage>openjdk:17-alpine3.14</baseImage>
                    <!--                    创作者本人的信息-->
                    <maintainer>yxm</maintainer>
                    <!--                    切换到root目录-->
                    <workdir>/ROOT</workdir>
                    <!--                    执行的命令-->
                    <cmd>["java","-version"]</cmd>
                    <entryPoint>["java","-jar","${project.build.finalName}.jar"]</entryPoint>

                    <!--                    指定Dcokerfile路径,${project.basedir}:项目根路径-->
                    <!--                    <dockerDirectory>${project.basedir}</dockerDirectory>-->


                    <!--指定生成的镜像名: 镜像名前缀/项目名称-->
                    <imageName>${docker.image.prefix}/${project.artifactId}</imageName>

                    <!--指定标签-->
                    <imageTags>
                        <!--                        可替换为当前项目的版本号-->
                        <imageTag>${project.version}</imageTag>
                    </imageTags>

                    <!-- 远程docker api 地址-->
                    <dockerHost>Http://192.168.136.150:2375</dockerHost>

                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <resources>
                        <resource>
                            <!--                            放到容器哪个目录下面-->
                            <targetPath>/ROOT</targetPath>
                            <!--                            用于指定需要复制的根目录-->
                            <!--jar 包所在的路径  此处配置的 即对应 target 目录-->
                            <directory>${project.build.directory}</directory>
                            <!--                            用于指定需要复制的文件-->
                            <!-- 需要包含的 jar包 ，这里对应的是 Dockerfile 中添加的文件名　-->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>

                </configuration>
            </plugin>
        </plugins>
    </build>

    <!--    <distributionManagement>-->
    <!--        <repository>-->
    <!--            <id>nexus</id>-->
    <!--            <name>Releases</name>-->
    <!--            <url>http://127.0.0.1:8081/repository/maven-releases</url>-->
    <!--        </repository>-->
    <!--        <snapshotRepository>-->
    <!--            <id>nexus</id>-->
    <!--            <name>Snapshot</name>-->
    <!--            <url>http://127.0.0.1:8081/repository/maven-snapshots</url>-->
    <!--        </snapshotRepository>-->
    <!--    </distributionManagement>-->

</project>
